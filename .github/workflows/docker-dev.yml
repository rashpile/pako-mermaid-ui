name: Development Build

on:
  push:
    branches:
      - develop
      - feature/*
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-dev:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Build and push development image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.dev
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-${{ steps.extract_branch.outputs.branch }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üê≥ Development Docker image built and pushed!\n\n` +
                    `**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-${{ steps.extract_branch.outputs.branch }}\`\n\n` +
                    `To test locally:\n` +
                    `\`\`\`bash\n` +
                    `docker run -p 3000:80 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-${{ steps.extract_branch.outputs.branch }}\n` +
                    `\`\`\``
            })